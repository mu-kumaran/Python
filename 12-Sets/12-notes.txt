Sets
----
- Unordered collection of distinct objects
- datastructure in python used to group and store multiple elements 
- Set elements are immutable, unique, duplicate elements are not allowed. so sets cannot have lists and dictionaries as
  an element, since they are mutable.
- Set as a whole can be modified, means mutable
- valid set can have values of Numeric,String,Tuple,Boolean datatypes.
- defined using the set() function or placing all elements within a pair of curly braces
- but {} is an empty dictionary but not an set

eg. data = set()
    print(data)
    print(type(data))

    set1 = {1,2,3}
    set2 = {6,8.9,"james"}
    print(set1)
    print(set2)

Accessing elements in sets:
---------------------------
- since sets are unordered individual elements cannot be accessed.
- We can access elements One by One by looping through it

eg. days = {"Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"}
    print(days)

    for day in days:
        print(day)


Set operations
--------------
- Union of sets
- Set intersection
- Difference of sets

Union of sets:
--------------
- Union of two sets A and B is the set of elements that are in A, in B, or in both A and B
- Union operation on two sets produces a new set containing all the distinct elements from both the sets
- union operation is performed using '|' operator or union() method

eg. A = {1,2,3,4,5}
    B = {4,5,6,7,8}
    print(A|B)
    print(A.union(B))

Intersection of sets:
---------------------
- set of elements that are common in both the sets
- intersection operation can be performed using '&' operator or intersection() method

eg. A = {1,2,3,4,5}
    B = {4,5,6,7,8}
    print(A&B)
    print(A.intersection(B))

Set Difference
--------------
- new set containing only the elements from the first set and none from the second set
- performed using '-' operator or difference() method

eg. A = {1,2,3,4,5}
    B = {4,5,6,7,8}
    print("A-B = ",A-B)
    print("B-A = ",B-A)
    print("A-B = ",A.difference(B))
    print("B-A = ",B.difference(A))

Built-in functions
------------------
- len(), min(), max() are already known
- sorted(): returns a new sorted list form elements in the set. It does not sort the set itself
- sum(): returns the sum of all elements in the set

eg. age = {23,22,34,36,24,41}

    print(len(age))
    print(min(age))
    print(max(age))
    print(sorted(age))
    print(sum(age))

Built-in methods
----------------

-add(): adds an element to the set
-intersection(): returns the intersection of two sets as the new set
-clear(): removes all elements form the set
-copy(): returns a copy of the Set
-difference(): returns the difference of two or more sets as a new set
-discard(): removes the element from the set if it is a member
-isdisjoint(): returns True if two sets have a null intersection
-issubset(): returns True if another set contains this set
-issuperset(): returns True if this set contains another set
-pop(): removes and returns an arbitrary set element
-remove(): removes an element from the set
-union(): returns the union of the set in a new Set
-update(): updates the union of itself and others

eg. age = {23,22,34,36,24,41}
    age.add(56)
    print(age)
    age.remove(22)
    print(age)
    age.pop()
    print(age)
    age.clear()
    print(age)

    A = {1,2,3}
    B = {1,2,3,4,5}
    c = {100,101,102}
    print(A.issubset(B))
    print(B.issuperset(A))
    print(A.isdisjoint(B))
    print(A.isdisjoint(C))

    Duplication not allowed in sets:
    --------------------------------
    A = [1,1,2,2,3,3,4,5,6]
    B = set(A) 
    print(B) # output: {1,2,3,4,5,6}
    B.add(7) # output: {1,2,3,4,5,7,6}
    B.add(1) # Here duplication is not allowed. So ame set result
    B.remove(4)
    print(sorted(B))