Dicitionary
-----------
- Unordered Key-Value pairs, mutable
- Each key in Dictionary is unique, while values can be repeated
- One can retrieve values when key is known
- keys must be of immutable datatypes such as strings,numbers,tuples
- pretty useful concept in python 
- even useful in concepts such as Data Science, Machine Learning and Web development   

syntax:
--------

dict_name = {}

eg. dict1 = {}

    dict2 = {
        1: "Sam",
        2: "John"
    }

    studentsEnrolled= {
    "John": "Python",
    "Sam": "Java",
    "Nick": ["Python","Javascript"]
    }

    print(studentsEnrolled)

Manipulating dictionary elements:
--------------------------------
1. Accessing elements
2. Updating elements
3. Deleting elements

Accessing elements:
-------------------
- uses keys to access elements, since indexing is not possible in dictionaries
- Keys can be accessed using [] or get() method

eg. example = {
    1:"John",
    2:"Nick"
    }

    print(example[1])
    print(example.get(2))

Updating elements:
------------------
- we can either update the value or add a new key-value pair ot the collection

eg. names = {
    1:"Sam",
    2:"Helen"
    }
    print(names)
    names[1] = "mano"
    names[2] = "sudhan"
    names[3] = "dinesh"
    names.update({4:"manoj",5:"kumar"})
    print(names)

Deleting elements:
------------------
- we can use the del keyword to delete an particular item or the whole dictionary

eg. names = {
    1:"Sam",
    2:"Helen",
    3:"dinesh"
    }
    del names[3]
    print(names)

Dictionary functions:
---------------------
keys() - returns list of dictionary keys
values() - returns list of dictionary values
clear() - removes all elements of a dictionary
get(key) - returns the value of the specified key, returns none if key does not exist
items() - returns a list of dictionaries key-value pairs in tuple form
update(dict) - adds specified dictionary(items) key-value pairs to the dictionary 

eg. empData = {
    101: "Bravo",
    102: "Asten",
    103: "Kerry"
    }

    print(empData.keys())
    print(empData.values())
    print(empData.items())
    empData.update({104:"Curan",105:"Elly"})
    print(empData)
    print(empData.get(104))

Accessing and updating list inside dictionaries
------------------------------------------------
syntax:
-------
var[key].append(value)
var[key].remove(value)

eg. continent = {
    "Asia":["India","UAE","China"]
    }

    continent["Asia"].append("Japan")
    print(continent)
    continent["Asia"].remove("China")
    print(continent)

Iterating over a dictionary
---------------------------
- iterating over dictionary is little bit tricky compared to iterating over lists and tuples because of 
  key-value pairs in dictionaries

eg. empData = {
    101: "Bravo",
    102: "Asten",
    103: "Kerry"
    }
    for i in empData.keys():
        print(i)        # returns keys

    for i in empData.values():
        print(i)        # returns values

    for i in empData.items():
        print(i)        # returns both keys and values in tuple form
        print(i[0])     # returns keys
        print(i[1])     # returns values

Dictionary comprehension:
------------------------
syntax:
-------
dt = {key_expression : value_expression for item in iterable if condition}

examples:

# squares of number
sqr = {x:x**2 for x in range(1,6)}
print(sqr)

# squares of even number
sqr_even = {x:x**2 for x in range(1,6) if x%2==0}
print(sqr_even)

# Flipped dictionay
dic = {'a':1,'b':2,'c':3,'d':4,'e':5}
dic_inv = {val:key for key,val in dic.items()}
print(dic_inv)

# counting letters in words and split words into letters
fruits = ['apple','banana','cherry','grapes','Guava']
letter_count = {key:len(key) for key in fruits}
split_words = {key:key.split() for key in fruits}
print(letter_count)
print(split_words)

# creating empty list,tuple,dictionary for each key in dictionary
key_list = ['a','b','c','d','e']
empty_list = {key:[] for key in key_list}
empty_dict = {key:{} for key in key_list}
empty_tuple = {key:() for key in key_list}

print(empty_list)
print(empty_dict)
print(empty_tuple)
